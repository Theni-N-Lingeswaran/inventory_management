<div class="card-body">
  <%= form_for(:user, url: create_employee_path, method: 'POST', :html => { :id => 'new_employee_form' }) do |f| %>
    <%= f.hidden_field :current_company_id, value: current_user.current_company_id%>
    <div class="row">
      <label for="inputName" class="col-sm-2 col-form-label">Employee Role<span class="text-danger">*</span></label>
      <div class="form-group col-sm-10">
        <div id='user_role_div' name='user[role]' disabled></div>
      </div>
    </div>

    <div class="row">
      <label for="inputName" class="col-sm-2 col-form-label">Employee Name<span class="text-danger">*</span></label>
      <div class="form-group col-sm-10">
        <%= f.text_field :contact_name, autofocus: true, autocomplete: 'contact_name', placeholder: 'Employee Name', class: 'form-control' %>
      </div>
    </div>

    <div class="row">
      <label for="inputName" class="col-sm-2 col-form-label">Employee Phone<span class="text-danger">*</span></label>
      <div class="form-group col-sm-10">
        <%= f.text_field :contact_number, autofocus: true, autocomplete: 'contact_number', placeholder: 'Contact Number', class: 'form-control' %>
      </div>
    </div>

    <div class="row">
      <label for="inputName" class="col-sm-2 col-form-label">Alternative Phone</label>
      <div class="form-group col-sm-10">
        <%= f.text_field :alternate_contact_number, autofocus: true, autocomplete: 'alternate_contact_number', placeholder: 'Alternative Contact Number', class: 'form-control' %>
      </div>
    </div>

    <div class="row">
      <label for="inputName" class="col-sm-2 col-form-label">Employee Email<span class="text-danger">*</span></label>
      <div class="form-group col-sm-10">
        <%= f.email_field :email, autofocus: true, autocomplete: 'email', placeholder: 'Email', class: 'form-control' %>
      </div>
    </div>

    <div class="row">
      <label for="inputName" class="col-sm-2 col-form-label">Password<span class="text-danger">*</span></label>
      <div class="form-group col-sm-10">
        <%= f.text_field :password, autocomplete: 'new-password', placeholder: 'Password', class: 'form-control', value: '123456' %>
      </div>
    </div>

    <div class="row">
      <label for="inputName" class="col-sm-2 col-form-label">Confirm Password<span class="text-danger">*</span></label>
      <div class="form-group col-sm-10">
        <%= f.text_field :password_confirmation, autocomplete: 'new-password', placeholder: 'Re-Password', class: 'form-control', value: '123456' %>
      </div>
    </div>

    <div class="row">
      <div class="offset-sm-2 col-sm-10">
        <%= f.submit 'Create Employee', class: 'btn btn-primary' %>
      </div>
    </div>
  <%end%>
</div>

<script>
  $(function () {
    $.validator.setDefaults({
      submitHandler: function (form) {
        form.submit()
      }
    });

    $('#new_employee_form').validate({
      ignore: [],
      rules: {
        'user[role]': {
          required: true
        },
        'user[contact_name]': {
          required: true
        },
        'user[contact_number]': {
          required: true,
          number: true,
          minlength: 10,
          maxlength: 15,
        },
        'user[email]': {
          required: true,
          email:true
        },
        'user[password]': {
          required: true
        },
        'user[password_confirmation]': {
          required: true,
          equalTo: '#user_password'
        }
      },
      messages: {
        'user[role]': {
          required: "Select the employee role"
        },
        'user[contact_name]': {
          required: "Please enter a employee name"
        },
        'user[contact_number]': {
          required: "Please enter a employee number",
          number: "Please enter a vaild employee number",
          minlength: "Please enter at least 10 characters",
          maxlength: "Max 15 characters allowed"
        },
        'user[email]': {
          required: "Please enter a email address",
          email: "Please enter a vaild email address"
        },
        'user[password]': {
          required: "Please provide a password"
        },
        'user[password_confirmation]': {
          required: "Please provide a confirm password"
        }
      },
      errorElement: 'div',
      errorPlacement: function (error, element) {
        error.addClass('invalid-feedback');
        element.closest('.form-group').append(error);
      },
      highlight: function (element, errorClass, validClass) {
        if($(element).hasClass('vscomp-hidden-input') == true) {
          $(element).parent().addClass('is-invalid');
        } else {
          $(element).addClass('is-invalid');
        }
      },
      unhighlight: function (element, errorClass, validClass) {
        if($(element).hasClass('vscomp-hidden-input') == true) {
          $(element).parent().removeClass('is-invalid');
        } else {
          $(element).removeClass('is-invalid');
        }
      }
    });

    VirtualSelect.init({
      ele: '#user_role_div',
      hideClearButton: false,
      multiple: false,
      search: false,
      placeholder: 'User Role',
      options: [{label: 'Admin', value: 'Admin'}, {label: 'Employee', value: 'Employee'}, {label: 'Customer', value: 'Customer'}],
      noOptionsText: 'No results found',
      dropboxWidth: '100%',
      zIndex: 10,
      markSearchResults: false,
      showSelectedOptionsFirst: false,
      hasOptionDescription: true,
      // onServerSearch: onSampleSelectServerSearch,
      showValueAsTags: false,
      keepAlwaysOpen: false,
      allowNewOption: false,
      maxValues: false,
      disabledOptions: [],
      selectedValue: ['Employee'],
      itemHeight: '10px',
      optionHeight: '40px',
      noOptionsText: 'No results found',
      optionSelectedText: 'option selected',
      searchPlaceholderText: 'search',
    });
  });
</script>
