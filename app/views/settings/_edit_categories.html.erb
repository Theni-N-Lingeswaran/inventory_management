<%= form_for(:category, url: update_category_path, :html => { :id => 'update_category_form' }) do |f| %>

  <%if @main_category_id != nil%>
    <div class="row">
      <label for="inputName" class="col-sm-4 col-form-label">Main Category Name</label>
      <div class="form-group col-sm-8">
        <div id="category_div" name="category[category_id]"> </div>
      </div>
    </div>
  <%end%>

  <div class="row">
    <label for="inputName" class="col-sm-4 col-form-label"><%if @main_category_id != nil%>Sub <%else%>Main <%end%>Category Name</label>
    <div class="form-group col-sm-8">
      <%= f.text_field :category_name, autofocus: true, autocomplete: 'category_name', placeholder: @main_category_id != nil ? 'Sub Category Name' : 'Main Category Name', :required => true, class: 'form-control', value: @category_details&.category_name %>
    </div>
  </div>

  <div class="row">
    <label for="inputName" class="col-sm-4 col-form-label">Main Category Name</label>
    <div class="form-group col-sm-8">
      <div id="category_status_div" name="category[delist]"> </div>
    </div>
  </div>

  <hr>
  <div class="row float-right">
    <div class="col-12">
      <%= f.submit 'Update Category', class: 'btn btn-success ml-2 mr-2' %>
      <%= f.submit 'Close', type: 'button', class: 'btn btn-primary modal-close' %>
    </div>
  </div>
<%end%>

<script>
  $(function () {
    $.validator.setDefaults({
      submitHandler: function (form) {
        form.submit();
      }
    });

    $('#update_category_form').validate({
      ignore: [],
      rules: {
        'category[category_id]': {
          required: true
        },
        'category[category_name]': {
          required: true
        },
        'category[delist]': {
          required: true
        }
      },
      messages: {
      	'category[category_id]': {
          required: "Select main category name"
        },
        'category[category_name]': {
          required: "Please enter a category name"
        },
        'category[delist]': {
          required: "Select category status"
        }
      },
      errorElement: 'div',
      errorPlacement: function (error, element) {
        error.addClass('invalid-feedback');
        element.closest('.form-group').append(error);
      },
      highlight: function (element, errorClass, validClass) {
        if($(element).hasClass('vscomp-hidden-input') == true) {
          $(element).parent().addClass('is-invalid');
        } else {
          $(element).addClass('is-invalid');
        }
      },
      unhighlight: function (element, errorClass, validClass) {
        if($(element).hasClass('vscomp-hidden-input') == true) {
          $(element).parent().removeClass('is-invalid');
        } else {
          $(element).removeClass('is-invalid');
        }
      }
    });

    VirtualSelect.init({
      ele: '#category_div',
      hideClearButton: false,
      multiple: false,
      search: false,
      placeholder: 'Main-Category',
      options: <%=raw @main_category_array.to_json%>,
      noOptionsText: 'No results found',
      // dropboxWidth: 'auto',
      zIndex: 10,
      markSearchResults: false,
      showSelectedOptionsFirst: false,
      hasOptionDescription: true,
      // onServerSearch: onSampleSelectServerSearch,
      showValueAsTags: false,
      keepAlwaysOpen: false,
      allowNewOption: false,
      maxValues: false,
      disabledOptions: [],
      selectedValue: [<%=@main_category_id%>],
      itemHeight: '10px',
      optionHeight: '40px',
      noOptionsText: 'No results found',
      optionSelectedText: 'option selected',
      searchPlaceholderText: 'search',
    });

    VirtualSelect.init({
      ele: '#category_status_div',
      hideClearButton: false,
      multiple: false,
      search: false,
      placeholder: 'Category Status',
      options: [{label: 'Active', value: 0}, {label: 'De-active', value: 1}],
      noOptionsText: 'No results found',
      // dropboxWidth: 'auto',
      zIndex: 10,
      markSearchResults: false,
      showSelectedOptionsFirst: false,
      hasOptionDescription: true,
      // onServerSearch: onSampleSelectServerSearch,
      showValueAsTags: false,
      keepAlwaysOpen: false,
      allowNewOption: false,
      maxValues: false,
      disabledOptions: [],
      selectedValue: [<%= @category_details&.delist == true ? 1 : 0%>],
      itemHeight: '10px',
      optionHeight: '40px',
      noOptionsText: 'No results found',
      optionSelectedText: 'option selected',
      searchPlaceholderText: 'search',
    });
  });
</script>